version: "3.8"

networks:
  bridge:
    driver: bridge

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 32181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      bridge:
        aliases:
          - zookeeper

  kafka:
    image: confluentinc/cp-kafka
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:32181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,EXTERNAL://0.0.0.0:29092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,EXTERNAL://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CREATE_TOPICS: sensor_logs:1:1 
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"
      - "29092:29092"
    networks:
      bridge:
        aliases:
          - kafka

  kafka-producer:
    build: ./kafka_producer
    ports:
      - "5000:5000"
    depends_on:
      - kafka
    environment:
      KAFKA_BROKER_URL: "kafka:9092"  #TODO Set environment variable
    networks:
      bridge:
        aliases:
          - kafka-producer


  kafka-consumer:
    build: ./kafka_consumer
    depends_on:
      - kafka
      - kafka-producer
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    networks:
      bridge:
        aliases:
          - kafka-consumer

  postgres:
    image: postgres:16
    environment:
      POSTGRES_DB: sensor_logs
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
    volumes:
      - ./postgres/init:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    networks:
      bridge:
        aliases:
          - postgres
  
  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: root
    ports:
      - "8080:80"
    networks:
      bridge:
        aliases:
          - pgadmin

